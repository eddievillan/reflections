

When would you want to use a remote repository rather than keeping all your work local?.

The best time to use remote repositories is when you're collaborating a project with multiple people
working on it. It's a more efficient way to share work collectively.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

It's quite tedious and time consuming to pull a branch. commits can stack up in your online repository and after some time, can all be pulled at the same time. Doing so won't affect the git log from syncing. 
All commits will appear separate from each other on your public repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

 - Forks are copies of repositories found online @GitHub. These copies are saved to your GitHub colleciton. Forks
   can be used when you want to copy another person's work.
 - Clones are also copies of repositories, but they are directly stored locally. They can come from online or local
   repositories. This is an awesome option if you only want to save your files to work on offline.
 - Branches are changes made to the same repository. This can also be a copy of a current repository, but the copy is
   copied to a more closely related storage space. The branch is great to use for experimental changes and non-
   commercial ready product.

What is the benefit of having a copy of the last known state of the remote stored locally?

If you've obtained a copy of the last known state of the remote and store it locally, you're able to work offline (i.e. you're getting on a plane)0
and then re-sync your repos when you get back online. This is awesome for progging on-the-go.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Not using Git or GitHub to collab on projects would be no easy task. I can't think of anything that would be easier in this
scenario, but version control would be far harder to keep track of. The use of branches makes it really easy to keep track
of different versions.